name: Standard CI/CD workflow for Azure Functions

on:
  workflow_call:
    inputs:
      azure_region:
        required: false
        type: string
        default: "West Europe"
    secrets:
      azure_subscription_id:
        required: true
      azure_client_id:
        required: true
      azure_client_secret:
        required: true
      azure_tenant_id:
        required: true
      azure_storage_account_name:
        required: true
      azure_storage_account_access_key:
        required: true

env:
  DEPLOY_TARGET_REGION: ${{ inputs.azure_region }}
  AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.azure_storage_account_name }}
  TF_VAR_AZURE_STORAGE_ACCOUNT_ACCESS_KEY: ${{ secrets.azure_storage_account_access_key }}
  AZURE_CLIENT_ID: ${{ secrets.azure_client_id }}
  AZURE_CLIENT_SECRET: ${{ secrets.azure_client_secret }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.azure_subscription_id }}
  AZURE_TENANT_ID: ${{ secrets.azure_tenant_id }}
  BUILD_NO: ${{ github.run_number }}
  AZURE_RESOURCE_GROUP_NAME: "DefaultResourceGroup-WEU"

jobs:
  deploy-app:
    name: Kotlin Spring Cloud Function - Azure deployment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - {
            component-name: "Kotlin Spring Cloud Function - Azure",
            stack-name: "Demo-Azure-Clean-Architecture"
          }

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId": "${{ secrets.azure_client_id }}",
              "clientSecret": "${{ secrets.azure_client_secret }}",
              "subscriptionId": "${{ secrets.azure_subscription_id }}",
              "tenantId": "${{ secrets.azure_tenant_id }}"
            }

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.10.5

      - name: Deploy infrastructure with Terraform
        run: |
          cd ${GITHUB_WORKSPACE}/cdk/azure/cdktf.out/stacks/${{ matrix.config.stack-name }}
          terraform init -reconfigure \
            -backend-config="resource_group_name=${AZURE_RESOURCE_GROUP_NAME}" \
            -backend-config="storage_account_name=${AZURE_STORAGE_ACCOUNT_NAME}" \
            -backend-config="client_id=${AZURE_CLIENT_ID}" \
            -backend-config="client_secret=${AZURE_CLIENT_SECRET}" \
            -backend-config="subscription_id=${AZURE_SUBSCRIPTION_ID}" \
            -backend-config="tenant_id=${AZURE_TENANT_ID}"
          terraform plan \
            -var="AZURE_CLIENT_ID=${AZURE_CLIENT_ID}" \
            -var="AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}" \
            -var="AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}" \
            -var="AZURE_TENANT_ID=${AZURE_TENANT_ID}" \
            -var="AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME}" \
            -var="AZURE_RESOURCE_GROUP_NAME=${AZURE_RESOURCE_GROUP_NAME}" \
            -out=tfplan
          terraform apply -auto-approve tfplan


      - name: Deploy Azure Function with Gradle
        run: ./gradlew clean azureFunctionsDeploy
